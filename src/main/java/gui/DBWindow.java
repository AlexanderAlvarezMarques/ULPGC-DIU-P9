/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import db.Utils;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.ListSelectionModel;
import javax.swing.border.Border;
import javax.swing.border.EmptyBorder;
import javax.swing.border.LineBorder;

/**
 *
 * @author Alexander √Ålvarez Marques
 */
public class DBWindow extends JDialog {

    // Attributes
    private final Utils connection;
    private Map<String, List<String>> db;
    
    /**
     * 
     * @param father
     * @param modal
     * @param connection 
     */
    public DBWindow(JFrame father, boolean modal, Utils connection) {
        super(father, modal);
        super.setLocationRelativeTo(null);
        this.connection = connection;
        
        initComponents();
        
        gradientBackground.paintBackground(new Color(46, 0, 125), new Color(79, 4, 209));
        
        setUpSelectButtons(2);
        loadTables();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gradientBackground = new beans.GradientBackground();
        databasePanel = new javax.swing.JPanel();
        tablesPanel = new javax.swing.JPanel();
        tablesScrollPanel = new javax.swing.JScrollPane();
        tablesList = new javax.swing.JList<>();
        actionsPanel = new javax.swing.JPanel();
        showColumnsButton = new javax.swing.JButton();
        selectAllButton = new javax.swing.JButton();
        selectNoneButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        columnsPanel = new javax.swing.JPanel();
        columnsScrollPanel = new javax.swing.JScrollPane();
        columnsList = new javax.swing.JList<>();
        buttonsPanel = new javax.swing.JPanel();
        simpleSelectionButton = new javax.swing.JToggleButton();
        intervalSelectionButton = new javax.swing.JToggleButton();
        multipleIntervalSelectionButton = new javax.swing.JToggleButton();
        exitButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Database");

        databasePanel.setOpaque(false);

        tablesPanel.setOpaque(false);

        tablesList.setBackground(new java.awt.Color(99, 99, 99));
        tablesList.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(99, 99, 99), 2, true));
        tablesList.setForeground(new java.awt.Color(255, 255, 255));
        tablesList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = {};
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        tablesScrollPanel.setViewportView(tablesList);

        javax.swing.GroupLayout tablesPanelLayout = new javax.swing.GroupLayout(tablesPanel);
        tablesPanel.setLayout(tablesPanelLayout);
        tablesPanelLayout.setHorizontalGroup(
            tablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tablesScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tablesPanelLayout.setVerticalGroup(
            tablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tablesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tablesScrollPanel))
        );

        actionsPanel.setOpaque(false);

        showColumnsButton.setText("Show columns");
        showColumnsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showColumnsButtonActionPerformed(evt);
            }
        });

        selectAllButton.setText("Select all");
        selectAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectAllButtonActionPerformed(evt);
            }
        });

        selectNoneButton.setText("Select none");
        selectNoneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectNoneButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Clear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout actionsPanelLayout = new javax.swing.GroupLayout(actionsPanel);
        actionsPanel.setLayout(actionsPanelLayout);
        actionsPanelLayout.setHorizontalGroup(
            actionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(showColumnsButton, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
            .addComponent(selectAllButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(selectNoneButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        actionsPanelLayout.setVerticalGroup(
            actionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(actionsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(showColumnsButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(selectAllButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(selectNoneButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(82, 82, 82))
        );

        columnsPanel.setOpaque(false);

        columnsList.setBackground(new java.awt.Color(99, 99, 99));
        columnsList.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(99, 99, 99), 4, true));
        columnsList.setForeground(new java.awt.Color(255, 255, 255));
        columnsList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = {};
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        columnsScrollPanel.setViewportView(columnsList);

        javax.swing.GroupLayout columnsPanelLayout = new javax.swing.GroupLayout(columnsPanel);
        columnsPanel.setLayout(columnsPanelLayout);
        columnsPanelLayout.setHorizontalGroup(
            columnsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(columnsPanelLayout.createSequentialGroup()
                .addComponent(columnsScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        columnsPanelLayout.setVerticalGroup(
            columnsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(columnsScrollPanel)
        );

        javax.swing.GroupLayout databasePanelLayout = new javax.swing.GroupLayout(databasePanel);
        databasePanel.setLayout(databasePanelLayout);
        databasePanelLayout.setHorizontalGroup(
            databasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(databasePanelLayout.createSequentialGroup()
                .addComponent(tablesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(actionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(columnsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        databasePanelLayout.setVerticalGroup(
            databasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tablesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(databasePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(columnsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(databasePanelLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(actionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 105, Short.MAX_VALUE))
        );

        buttonsPanel.setOpaque(false);

        simpleSelectionButton.setText("Simple");
        simpleSelectionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpleSelectionButtonActionPerformed(evt);
            }
        });

        intervalSelectionButton.setText("Interval");
        intervalSelectionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intervalSelectionButtonActionPerformed(evt);
            }
        });

        multipleIntervalSelectionButton.setText("Multiple interval");
        multipleIntervalSelectionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multipleIntervalSelectionButtonActionPerformed(evt);
            }
        });

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Alexander √Ålvarez Marques");

        javax.swing.GroupLayout buttonsPanelLayout = new javax.swing.GroupLayout(buttonsPanel);
        buttonsPanel.setLayout(buttonsPanelLayout);
        buttonsPanelLayout.setHorizontalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(simpleSelectionButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(intervalSelectionButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(multipleIntervalSelectionButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addComponent(exitButton)
                .addContainerGap())
        );
        buttonsPanelLayout.setVerticalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(simpleSelectionButton)
                    .addComponent(intervalSelectionButton)
                    .addComponent(multipleIntervalSelectionButton)
                    .addComponent(exitButton)
                    .addComponent(jLabel1))
                .addContainerGap())
        );

        javax.swing.GroupLayout gradientBackgroundLayout = new javax.swing.GroupLayout(gradientBackground);
        gradientBackground.setLayout(gradientBackgroundLayout);
        gradientBackgroundLayout.setHorizontalGroup(
            gradientBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(databasePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(gradientBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        gradientBackgroundLayout.setVerticalGroup(
            gradientBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gradientBackgroundLayout.createSequentialGroup()
                .addComponent(databasePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gradientBackground, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gradientBackground, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadTables() {
        db = connection.getDBStructure();
        
        // Generate array
        String [] tables = new String [db.size()];
        int p = 0;
        for (String table : db.keySet()) {
            tables[p] = table;
            p++;
        }
        
        tablesList.setListData(tables);
    }
    
    private void setUpSelectButtons (int b) {
        simpleSelectionButton.setSelected(b == 0);
        intervalSelectionButton.setSelected(b == 1);
        multipleIntervalSelectionButton.setSelected(b == 2);
    }
    
    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        dispose();
    }//GEN-LAST:event_exitButtonActionPerformed

    private void simpleSelectionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpleSelectionButtonActionPerformed
        setUpSelectButtons(0);
        tablesList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }//GEN-LAST:event_simpleSelectionButtonActionPerformed

    private void intervalSelectionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_intervalSelectionButtonActionPerformed
        setUpSelectButtons(1);
        tablesList.setSelectionMode(ListSelectionModel.SINGLE_INTERVAL_SELECTION);
    }//GEN-LAST:event_intervalSelectionButtonActionPerformed

    private void multipleIntervalSelectionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multipleIntervalSelectionButtonActionPerformed
        setUpSelectButtons(2);
        tablesList.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
    }//GEN-LAST:event_multipleIntervalSelectionButtonActionPerformed

    private void showColumnsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showColumnsButtonActionPerformed
        List<String> tables = tablesList.getSelectedValuesList();
        List<String> columns = new ArrayList<>();

        tables.forEach(table -> {
            db.get(table).forEach(column -> {
                columns.add(table + "." + column);
            });
        });

        String [] list = new String [columns.size()];

        int p = 0;
        for (String column : columns) {
            list[p] = column;
            p++;
        }

        columnsList.setListData(list);
    }//GEN-LAST:event_showColumnsButtonActionPerformed

    private void selectAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectAllButtonActionPerformed
        multipleIntervalSelectionButtonActionPerformed(evt);
        int [] indexes = new int [db.size()];
        for (int i = 0; i < db.size(); i++) {
            indexes[i] = i;
        }
        tablesList.setSelectedIndices(indexes);
    }//GEN-LAST:event_selectAllButtonActionPerformed

    private void selectNoneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectNoneButtonActionPerformed
        tablesList.clearSelection();
    }//GEN-LAST:event_selectNoneButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String [] list = new String [0];
        columnsList.setListData(list);
        tablesList.clearSelection();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel actionsPanel;
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JList<String> columnsList;
    private javax.swing.JPanel columnsPanel;
    private javax.swing.JScrollPane columnsScrollPanel;
    private javax.swing.JPanel databasePanel;
    private javax.swing.JButton exitButton;
    private beans.GradientBackground gradientBackground;
    private javax.swing.JToggleButton intervalSelectionButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JToggleButton multipleIntervalSelectionButton;
    private javax.swing.JButton selectAllButton;
    private javax.swing.JButton selectNoneButton;
    private javax.swing.JButton showColumnsButton;
    private javax.swing.JToggleButton simpleSelectionButton;
    private javax.swing.JList<String> tablesList;
    private javax.swing.JPanel tablesPanel;
    private javax.swing.JScrollPane tablesScrollPanel;
    // End of variables declaration//GEN-END:variables
}
